{"version":3,"sources":["../../../../src/app/free/inputs/activeClass.ts"],"names":[],"mappings":"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","file":"activeClass.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, Output, HostListener, Renderer } from '@angular/core';\r\n\r\n \r\n\r\nexport class ActiveDirective {\r\n\r\n\tpublic el: ElementRef = null;\r\n\tpublic elLabel: ElementRef = null;\r\n\tpublic elIcon: Element = null;\r\n\r\n\tconstructor(el : ElementRef,public renderer: Renderer) {\r\n\t\tthis.el = el;\r\n    }\r\n\r\n\t onClick() {\r\n\t\t// this.el.nativeElement = event.target;\r\n\t\t\r\n\t\tlet inputId;\r\n\t\tlet inputP;\r\n\r\n\t\ttry {\r\n\t\t\tinputId = this.el.nativeElement.id;\r\n\t\t} catch(err) {}\r\n\r\n\t\ttry {\r\n\t\t\tinputP = this.el.nativeElement.parentNode;\r\n\t\t} catch(err) {}\r\n\t\t\r\n\t\t\r\n\t\tthis.elLabel = inputP.querySelector('label[for=\"'+ inputId +'\"]') || inputP.querySelector('label');\r\n\r\n\t\tif(this.elLabel != null)\r\n\t\t\tthis.renderer.setElementClass(this.elLabel, 'active', true);\r\n\r\n\t\tthis.elIcon = inputP.querySelector('i') || false;\r\n\r\n\t\tif(this.elIcon) {\r\n\t\t\tthis.renderer.setElementClass(this.elIcon, 'active', true);\r\n\t\t}\r\n\t}\r\n\r\n\t onBlur() {\r\n\t\tlet value = '';\r\n\t\tif(this.elLabel != null) {\r\n\t\t\tvalue = this.el.nativeElement.value || '';\r\n\t\t\tif(value == '') {\r\n\t\t\t\tthis.renderer.setElementClass(this.elLabel, 'active', false);\r\n\t\t\t\tif(this.elIcon) {\r\n\t\t\t\t\tthis.renderer.setElementClass(this.elIcon, 'active', false);\r\n\t\t\t\t}\r\n\t\t\t} \r\n\r\n\t\t\t\r\n\t\t\r\n\t\t}\r\n\t}\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n\tselector: 'input[type=\"text\"][mdbActive],input[type=\"email\"][mdbActive],input[type=\"password\"][mdbActive],textarea[mdbActive]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onClick': [{ type: HostListener, args: ['focus', ['$event'], ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ['$event'], ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}